#!/usr/bin/env ruby
#
# MySQL TERMINAL/CONSOLE
# Colin McCloskey
#
# Reads given database configuration and kicks off a mysql client
# connection to the described database service with full host name, user
# name, and database name in command-line. Includes password in shell
# output, so use over-the-shoulder caution (it's in your file tree, anyway,
# but you know)
#

require "optparse"

# Setting defaults:
@invocation_only = false
@sql_eval = nil

optparse = OptionParser.new do |opts|
  opts.banner = "Rails MySQL Quick Terminal Launcher\nUsage: mysql_term <rails_env> [opts]"
  opts.on("-i", "--command", "Don't connect to database, only display mysql CLI invocation") { @invocation_only = true }
  opts.on("-e", "--eval SQL", "Evaluate the given SQL command against the chosen database") {|cmd| @sql_eval = cmd }
  opts.on("-h", "--help", "Display this usage screen") do
    puts opts
    exit 0
  end
end
optparse.parse!

config_file = File.join( File.dirname(__FILE__), "..", "config", "database.yml")
unless File.exist?(config_file)
  $stderr.puts "Rails database config file #{config_file} does not exist"
  exit 1
end

begin
  require "yaml"
  all_config = YAML.load(File.open(config_file))
  environments = all_config.keys
  environment = ARGV.shift || "development"
  config = all_config[environment]
rescue Exception => e
  $stderr.puts "Error reading database configuration from #{config_file}"
  $stderr.puts e.message
  exit 1
end

unless environments.include?(environment)
  $stderr.puts "Database config for environment \"#{environment}\" does not exist."
  $stderr.puts "To specify environment, use: #{__FILE__} [#{environments.join("|")}]\n\n"
  exit 1
end

cli_opts = Hash.new
cli_opts["-u"] = config["username"] if config["username"]
cli_opts["-p"] = config["password"] if config["password"]
cli_opts["-h"] = config["host"] if config["host"]
cli_opts["-D"] = config["database"] if config["database"]
cli_opts["-e"] = "\"#{@sql_eval}\"" if @sql_eval
cmd = "mysql #{cli_opts.to_a.collect{|k,v| "#{k}#{v}"}.join(" ")}"

if @invocation_only
  puts cmd
  exit 0
else
  puts "Connecting to #{environment} database.\nTo change environment, use: #{__FILE__} [#{environments.join("|")}]\n\n"
  puts "Launching mysql: #{cmd}\n\n"
  exec(cmd)
end
